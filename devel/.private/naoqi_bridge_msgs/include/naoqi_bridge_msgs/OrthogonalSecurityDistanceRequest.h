// Generated by gencpp from file naoqi_bridge_msgs/OrthogonalSecurityDistanceRequest.msg
// DO NOT EDIT!


#ifndef NAOQI_BRIDGE_MSGS_MESSAGE_ORTHOGONALSECURITYDISTANCEREQUEST_H
#define NAOQI_BRIDGE_MSGS_MESSAGE_ORTHOGONALSECURITYDISTANCEREQUEST_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>

#include <std_msgs/Float32.h>

namespace naoqi_bridge_msgs
{
template <class ContainerAllocator>
struct OrthogonalSecurityDistanceRequest_
{
  typedef OrthogonalSecurityDistanceRequest_<ContainerAllocator> Type;

  OrthogonalSecurityDistanceRequest_()
    : orthogonal_distance()  {
    }
  OrthogonalSecurityDistanceRequest_(const ContainerAllocator& _alloc)
    : orthogonal_distance(_alloc)  {
  (void)_alloc;
    }



   typedef  ::std_msgs::Float32_<ContainerAllocator>  _orthogonal_distance_type;
  _orthogonal_distance_type orthogonal_distance;





  typedef boost::shared_ptr< ::naoqi_bridge_msgs::OrthogonalSecurityDistanceRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::naoqi_bridge_msgs::OrthogonalSecurityDistanceRequest_<ContainerAllocator> const> ConstPtr;

}; // struct OrthogonalSecurityDistanceRequest_

typedef ::naoqi_bridge_msgs::OrthogonalSecurityDistanceRequest_<std::allocator<void> > OrthogonalSecurityDistanceRequest;

typedef boost::shared_ptr< ::naoqi_bridge_msgs::OrthogonalSecurityDistanceRequest > OrthogonalSecurityDistanceRequestPtr;
typedef boost::shared_ptr< ::naoqi_bridge_msgs::OrthogonalSecurityDistanceRequest const> OrthogonalSecurityDistanceRequestConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::naoqi_bridge_msgs::OrthogonalSecurityDistanceRequest_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::naoqi_bridge_msgs::OrthogonalSecurityDistanceRequest_<ContainerAllocator> >::stream(s, "", v);
return s;
}


template<typename ContainerAllocator1, typename ContainerAllocator2>
bool operator==(const ::naoqi_bridge_msgs::OrthogonalSecurityDistanceRequest_<ContainerAllocator1> & lhs, const ::naoqi_bridge_msgs::OrthogonalSecurityDistanceRequest_<ContainerAllocator2> & rhs)
{
  return lhs.orthogonal_distance == rhs.orthogonal_distance;
}

template<typename ContainerAllocator1, typename ContainerAllocator2>
bool operator!=(const ::naoqi_bridge_msgs::OrthogonalSecurityDistanceRequest_<ContainerAllocator1> & lhs, const ::naoqi_bridge_msgs::OrthogonalSecurityDistanceRequest_<ContainerAllocator2> & rhs)
{
  return !(lhs == rhs);
}


} // namespace naoqi_bridge_msgs

namespace ros
{
namespace message_traits
{





template <class ContainerAllocator>
struct IsFixedSize< ::naoqi_bridge_msgs::OrthogonalSecurityDistanceRequest_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::naoqi_bridge_msgs::OrthogonalSecurityDistanceRequest_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::naoqi_bridge_msgs::OrthogonalSecurityDistanceRequest_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::naoqi_bridge_msgs::OrthogonalSecurityDistanceRequest_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::naoqi_bridge_msgs::OrthogonalSecurityDistanceRequest_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::naoqi_bridge_msgs::OrthogonalSecurityDistanceRequest_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::naoqi_bridge_msgs::OrthogonalSecurityDistanceRequest_<ContainerAllocator> >
{
  static const char* value()
  {
    return "69e9b81707b13ae1b2bceacbb0d41137";
  }

  static const char* value(const ::naoqi_bridge_msgs::OrthogonalSecurityDistanceRequest_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0x69e9b81707b13ae1ULL;
  static const uint64_t static_value2 = 0xb2bceacbb0d41137ULL;
};

template<class ContainerAllocator>
struct DataType< ::naoqi_bridge_msgs::OrthogonalSecurityDistanceRequest_<ContainerAllocator> >
{
  static const char* value()
  {
    return "naoqi_bridge_msgs/OrthogonalSecurityDistanceRequest";
  }

  static const char* value(const ::naoqi_bridge_msgs::OrthogonalSecurityDistanceRequest_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::naoqi_bridge_msgs::OrthogonalSecurityDistanceRequest_<ContainerAllocator> >
{
  static const char* value()
  {
    return "# Service for setting the orthogonal security distance of Pepper\n"
"\n"
"std_msgs/Float32 orthogonal_distance\n"
"\n"
"================================================================================\n"
"MSG: std_msgs/Float32\n"
"float32 data\n"
;
  }

  static const char* value(const ::naoqi_bridge_msgs::OrthogonalSecurityDistanceRequest_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::naoqi_bridge_msgs::OrthogonalSecurityDistanceRequest_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.orthogonal_distance);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct OrthogonalSecurityDistanceRequest_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::naoqi_bridge_msgs::OrthogonalSecurityDistanceRequest_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::naoqi_bridge_msgs::OrthogonalSecurityDistanceRequest_<ContainerAllocator>& v)
  {
    s << indent << "orthogonal_distance: ";
    s << std::endl;
    Printer< ::std_msgs::Float32_<ContainerAllocator> >::stream(s, indent + "  ", v.orthogonal_distance);
  }
};

} // namespace message_operations
} // namespace ros

#endif // NAOQI_BRIDGE_MSGS_MESSAGE_ORTHOGONALSECURITYDISTANCEREQUEST_H
